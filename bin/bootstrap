#!/usr/bin/env bash
# shellcheck disable=SC1091

# find script location
DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
# shellcheck source=${DIR}/../lib/bashopts.sh
source "${DIR}/../lib/bashopts.sh"

banner

# ensure REPO_PATH is set and directory exists
[[ -z "${REPO_PATH}" ]] && die "expected env var REPO_PATH is not set"
[[ ! -d "${REPO_PATH}" ]] && die "Directory ${REPO_PATH} DOES NOT exist."

################################################################################
# Help function                                                                #
################################################################################
help() {
   # Display Help
   echo "read .repo-manifest file, iterate list of repos, authorize direnv and execute"
   echo "the default make target for each."
   echo
   echo "Syntax: scriptTemplate [-h|v]"
   echo "options:"
   echo " h     Print this Help."
   echo " v     Verbose mode."
   echo
}

################################################################################
# Process the input options. Add options as needed.                            #
################################################################################
# Get the options
while getopts ":hv" option; do
   case $option in
      h) # display Help
        help
        exit
        ;;
      v) # set verbose flag
        DEBUG
        ;;

     \?) # invalid option
        echo "Error: Invalid option"
        exit
        ;;
   esac
done

################################################################################
# Main function                                                                #
################################################################################
main() {
  while IFS= read -r repo
  do
    # org=$(echo "$repo" | cut -d/ -f1)
    repo=$(echo "$repo" | cut -d/ -f2)
    echo ""
    echo "$repo"
    echo "#######################################################################"
    (
      cd "${REPO_PATH}/$repo" || exit
      [[ -f .envrc ]] && direnv allow
      [[ -f Makefile ]] && make
      : # true
    )
  done <<< "$(cat "${DIR}/../.repo-manifest")"
}

main "$@"
