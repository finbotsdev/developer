#!/usr/bin/env bash
# shellcheck disable=SC1091

# find script location
DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
# shellcheck source=./lib/bashopts.sh
source "${DIR}/../lib/bashopts.sh"

banner

# ensure REPO_PATH is set and directory exists
[[ -z "${REPO_PATH}" ]] && die "expected env var REPO_PATH is not set"
[[ ! -d "${REPO_PATH}" ]] && die "Directory ${REPO_PATH} DOES NOT exist."

###############################################################################
# Help function
###############################################################################
help() {
   # Display Help
   echo "read .repo-manifest file, iterate list of repos, clone or update each."
   echo
   echo "Syntax: scriptTemplate [-h|v]"
   echo "options:"
   echo " h     Print this Help."
   echo " v     Verbose mode."
   echo
}

###############################################################################
# Process the input options. Add options as needed.
###############################################################################
while getopts ":hv" option; do
   case $option in
      h) # display Help
        help
        exit
        ;;
      v) # set verbose flag
        echo "Enabling debug mode" && set -x
        ;;

     \?) # invalid option
        die "Error: Invalid option"
        ;;
   esac
done

###############################################################################
# Main function
###############################################################################
while IFS= read -r line
do
  org=$(echo "$line" | cut -d/ -f1)
  [[ -z "$org" ]] && die "malformed repo manifest entry"

  repo=$(echo "$line" | cut -d/ -f2)
  [[ -z "$repo" ]] && die "malformed repo manifest entry"

  git_clone_or_update "git@github.com:$org/$repo.git" "${REPO_PATH}/$repo"
done <<< "$(cat "${DIR}/../.repo-manifest")"
